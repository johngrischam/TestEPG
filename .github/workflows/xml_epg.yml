name: XML EPG Builder

on:
  workflow_dispatch:        # allows manual runs
  schedule:
    - cron: "0 */2 * * *"   # every 2 hours

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests xmltodict

      - name: Generate EPG from XML
        shell: bash
        run: |
          cat > build_epg.py << 'EOF'
          import json, requests, xmltodict

          data_url = 'http://116.202.210.205/test/it_dttsat_full.xml'
          print('Fetching XML...')
          resp = requests.get(data_url, timeout=60)
          resp.raise_for_status()
          xml_data = xmltodict.parse(resp.content)

          channels = {}
          for ch in xml_data['tv']['channel']:
              ch_id = ch.get('@id')
              if not ch_id:
                  continue
              display_names = []
              if isinstance(ch.get('display-name'), list):
                  display_names = [d['#text'] for d in ch['display-name']]
              elif isinstance(ch.get('display-name'), dict):
                  display_names = [ch['display-name']['#text']]
              logo = None
              if isinstance(ch.get('icon'), dict):
                  logo = ch['icon'].get('@src')
              elif isinstance(ch.get('icon'), list) and len(ch['icon']) > 0:
                  logo = ch['icon'][0].get('@src')
              channels[ch_id] = {
                  'id': ch_id,
                  'name': display_names[0] if display_names else ch_id,
                  'epgName': display_names[-1] if display_names else ch_id,
                  'logo': logo,
                  'programs': []
              }

          for p in xml_data['tv']['programme']:
              ch_id = p.get('@channel')
              if not ch_id or ch_id not in channels:
                  continue
              title = p.get('title', {}).get('#text') if isinstance(p.get('title'), dict) else None
              desc = p.get('desc', {}).get('#text') if isinstance(p.get('desc'), dict) else None
              category = p.get('category', {}).get('#text') if isinstance(p.get('category'), dict) else None
              poster = p.get('icon', {}).get('@src') if isinstance(p.get('icon'), dict) else None
              channels[ch_id]['programs'].append({
                  'start': p.get('@start'),
                  'end': p.get('@stop'),
                  'title': title,
                  'description': desc,
                  'category': category,
                  'poster': poster,
                  'channel': ch_id
              })

          result = list(channels.values())
          with open('list.json', 'w', encoding='utf-8') as f:
              json.dump(result, f, ensure_ascii=False, indent=2)

          print('âœ… list.json generated successfully')
          EOF

          python build_epg.py

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          add: 'list.json'
          message: 'Updated EPG from XML feed'
